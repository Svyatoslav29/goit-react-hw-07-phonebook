{"version":3,"sources":["App.module.css","components/Filter/filter.module.css","components/Form/form.module.css","components/redux/operations.js","components/redux/selector.js","components/Form/form.js","components/List/list.js","components/redux/actions.js","components/Filter/filter.js","App.js","components/redux/reducer.js","components/redux/store.js","index.js","components/List/list.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContacts","contact","post","deleteContacts","contactId","delete","id","operations","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","resetForm","inputChange","evt","target","value","className","s","formWrapper","form","onSubmit","preventDefault","find","toLocaleLowerCase","alert","label","input","type","placeholder","pattern","onChange","button","ContactList","listWrapper","list","map","item","text","onClick","filterChange","createAction","Filter","e","App","title","createReducer","fulfilled","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426c696a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3DTWP\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"form_formWrapper__2ISiL\",\"form\":\"form_form__ihEEy\",\"label\":\"form_label__3S5Qw\",\"input\":\"form_input__1_s0C\",\"button\":\"form_button__3cnGu\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://61a13a6a6c3b400017e69c6a.mockapi.io\";\n\nconst fetchContacts = createAsyncThunk(\n    \"contacts/fetchContacts\",\n    async (_, { rejectWithValue }) => {\n        try{\n            const { data } = await axios.get(\"/contacts\");\n            return data\n        }\n        catch(error){\n          rejectWithValue(error)\n        }\n    }\n);\n\nconst addContacts = createAsyncThunk(\n    \"contacts/addContact\",\n    async (contact, { rejectWithValue }) => {\n       try{\n           const { data } = await axios.post(\"/contacts\", contact);\n           return data\n       } \n       catch(error){\n           rejectWithValue(error)\n       }\n    }\n);\n\nconst deleteContacts = createAsyncThunk(\n    \"contacts/deleteContact\",\n    async (contactId, {rejectWithValue}) => {\n        try{\n            const {data: {id}} = await axios.delete(`contacts/${contactId}`)\n            return id\n       }\n       catch(error){\n           rejectWithValue(error)\n       }\n    }\n);\n\nconst operations = { fetchContacts, deleteContacts, addContacts };\nexport default operations\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const allFilteredContacts = createSelector (\n    [getContacts, getFilter],\n    (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter));\n    }\n)\n","import s from \"./form.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport operations from \"../redux/operations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../redux/selector\";\n\nfunction ContactForm() {\n \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLocaleLowerCase()\n    )) {\n      return alert(\"This contact has already been added to the list\");\n  }\n    dispatch(operations.addContacts({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputChange = (evt) => {\n    switch(evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n\n      case 'number':\n        setNumber(evt.target.value);\n        break;\n        \n      default:\n        return;  \n    }\n  };\n\n    return (\n      <div className={s.formWrapper}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              onChange={inputChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              onChange={inputChange}\n            />\n          </label>\n          <button className={s.button}>Add contact</button>\n        </form>\n      </div>\n    );\n  }\n\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  handleSubmit: PropTypes.func,\n  inputChange: PropTypes.func,\n};\n\nexport default ContactForm;","import s from \"./list.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allFilteredContacts } from \"../redux/selector\";\nimport operations from \"../redux/operations\";\n\nfunction ContactList() {\n  const getContacts = useSelector(allFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <li className={s.item} key={id}>\n              <p className={s.text}>{name}:</p>\n              <p className={s.text}>{number}</p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(operations.deleteContacts(id))}\n              >\n                Delete\n            </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  )\n};\n\nexport default ContactList;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst filterChange = createAction(\"contacts/filter\");\n\nexport default filterChange","import s from \"./filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport filterChange from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../redux/selector\";\n\nfunction Filter() {\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n         onChange={(e) => dispatch(filterChange(e.target.value))} \n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default Filter;","import s from \"./App.module.css\";\nimport ContactForm from \"./components/Form/form\";\nimport ContactList from \"./components/List/list\";\nimport Filter from \"./components/Filter/filter\";\n\nfunction App()  {\n  return (\n      <div className={s.App}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm/>\n        <h2 className={s.title}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport filterChange from \"./actions\";\nimport operations from \"./operations\";\n// import initialContacts from \"../contacts.json\";\n\nconst { addContacts, deleteContacts, fetchContacts } = operations;\n\nconst items = createReducer([], {\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\n    [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n    [deleteContacts.fulfilled]: (state, { payload }) => state.filter(({id}) => id !== payload),\n})\n\nconst filter = createReducer(\"\", {\n    [filterChange]: (_, { payload}) => payload,\n})\n\nexport default combineReducers({\n    items,\n    filter\n})","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./components/redux/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"list_item__1gE7I\",\"list\":\"list_list__36WwE\",\"text\":\"list_text__dSg5W\",\"button\":\"list_button__1v1Sn\"};"],"sourceRoot":""}